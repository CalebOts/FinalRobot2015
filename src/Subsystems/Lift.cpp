// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "../RobotMap.h"
#include "Lift.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

void LiftInterupt(uint32_t x, void *lift){
//	Lift* theLift = (Lift *) lift;
	printf("limit switch interrupt callback");

}

Lift::Lift() : Subsystem("lift") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	speedController1 = RobotMap::liftSpeedController1;
	speedController2 = RobotMap::liftSpeedController2;
	liftDrive = RobotMap::liftliftDrive;
	encoder = RobotMap::liftencoder;
	limitSwitch = RobotMap::liftlimitSwitch;
	gearboxShifter = RobotMap::liftgearboxShifter;
	pusher = RobotMap::liftpusher;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
		limitSwitch->RequestInterrupts(LiftInterupt, this);
		limitSwitch->EnableInterrupts();
}
    
//static void Lift::LowerSwitchTriggered() {
//	printf("limit switch was triggered");
//}
void Lift::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

