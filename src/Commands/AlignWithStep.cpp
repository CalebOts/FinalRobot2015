// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AlignWithStep.h"

AlignWithStep::AlignWithStep() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drivetrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	finished = false;
	rightDistance = 0.0;
	leftDistance = 0.0;
}

// Called just before this Command runs the first time
void AlignWithStep::Initialize() {
	puts("align with step initialize");
	FILE* file = fopen("/autonCalibrationData.txt", "r");
	if(!file) {
		finished = true;
		return;
	}
	fscanf(file,"%f", &leftDistance);
	fscanf(file,"%f", &rightDistance);
}

// Called repeatedly when this Command is scheduled to run
void AlignWithStep::Execute() {
	puts("align with step execute");
	float rightError = Robot::drivetrain->rightSonar->GetVoltage()/0.0098 - rightDistance;
	float leftError = Robot::drivetrain->leftSonar->GetVoltage()/0.0098 - leftDistance;
	float direction = rightError > leftError ? -60.0 : 60.0;
	RobotMap::drivetrainrobotDrive->MecanumDrive_Polar(-0.5,direction,0);
	finished = abs(rightError + leftError) < 1.0;
}

// Make this return true when this Command no longer needs to run execute()
bool AlignWithStep::IsFinished() {
	return finished;
}

// Called once after isFinished returns true
void AlignWithStep::End() {
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AlignWithStep::Interrupted() {

}
