// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AutonCalibration.h"
#include <stdio.h>

AutonCalibration::AutonCalibration() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drivetrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	currentSample = 0;
	leftSum = 0.0;
	rightSum = 0.0;
}

// Called just before this Command runs the first time
void AutonCalibration::Initialize() {
	currentSample = 0;
	leftSum = 0.0;
	rightSum = 0.0;
}

// Called repeatedly when this Command is scheduled to run
void AutonCalibration::Execute() {
	leftSum += Robot::drivetrain->leftSonar->GetVoltage()/0.0098;
	rightSum += Robot::drivetrain->rightSonar->GetVoltage()/0.0098;
	currentSample++;
}

// Make this return true when this Command no longer needs to run execute()
bool AutonCalibration::IsFinished() {
	return currentSample >= 20;//NUM_SAMPLES;
}

// Called once after isFinished returns true
void AutonCalibration::End() {
	//TODO: this is not working yet
	puts("finished");
	FILE* saveFile = fopen("/autonCalibrationData.txt", "w");
	if(!saveFile) {
		puts("error: could not open calibration save file");
	} else {
		fprintf(saveFile,"left %f\nright %f\n", leftSum/(float)NUM_SAMPLES, rightSum/(float)NUM_SAMPLES);
		fflush(saveFile);
		fclose(saveFile);
		puts("wrote file");
	}
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonCalibration::Interrupted() {

}
