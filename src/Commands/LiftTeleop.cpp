// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "LiftTeleop.h"
#include "../xbox.h"
#include "RunLift.h"
#include "../OI.h"
#include "../Robot.h"
#include "../RobotMap.h"

LiftTeleop::LiftTeleop() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::lift);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	techStick = Robot::oi->getJoystick2();
}

// Called just before this Command runs the first time
void LiftTeleop::Initialize() {
	raiseLift = new RunLift(0.5);
	lowerLift = new RunLift(-0.5);
	stopLift = new RunLift(0);
	lowerOneTote = new LowerOneTote();
	raiseOneTote = new RaiseOneTote();
}

// Called repeatedly when this Command is scheduled to run
void LiftTeleop::Execute() {
	if(techStick->GetRawButton(XBOX::LBUMPER)) {
		lowerOneTote->Start();
	}
	if(techStick->GetRawButton(XBOX::RBUMPER)) {
		raiseOneTote->Start();
	}
	if(techStick->GetRawAxis(RIGHT_TRIGGER) > .5) {
		raiseLift->Start();
	}
	else if(techStick->GetRawAxis(LEFT_TRIGGER) > .5) {
		lowerLift->Start();
	}
	else{
		raiseLift->Cancel();
		lowerLift->Cancel();
	}}

// Make this return true when this Command no longer needs to run execute()
bool LiftTeleop::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void LiftTeleop::End() {
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void LiftTeleop::Interrupted() {

}
