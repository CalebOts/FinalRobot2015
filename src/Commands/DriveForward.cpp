#include "DriveForward.h"
#include "../Subsystems/StepDetectorator.h"

DriveForward::DriveForward(double timeOut,double speed) {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drivetrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	startTime = 0.0;
	timeOut = DriveForward::timeOut;
	speed = DriveForward::speed;
}
void DriveForward::Initialize() {
	Robot::drivetrain->ResetHeading();
	startTime = Timer::GetFPGATimestamp();
	hasHitStep = false;
	isReady = false;
	hitStepAt = 0;
}
void DriveForward::Execute() {
	Robot::drivetrain->DriveOnHeading(-speed);

}
bool DriveForward::IsFinished() {
	if(!hasHitStep && Robot::stepDetectorator->IsAtStep()){
		hitStepAt = Timer::GetFPGATimestamp();
		hasHitStep = true;
	}

	isReady = hasHitStep && hitStepAt - Timer::GetFPGATimestamp() >= 1;
	return 	isReady || Timer::GetFPGATimestamp() > startTime + timeOut;
}
void DriveForward::End() {
	Robot::drivetrain->DriveOnHeading(0.0);
	puts("drive forward ended");
}
void DriveForward::Interrupted() {
}
